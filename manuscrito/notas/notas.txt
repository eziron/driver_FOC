Sobre la configuracion del STM32:
    - combinar la implementacion del control FOC junto a la configuracion del STM32
    - en el documento solo dar los ajustes esenciales y directamente relacionadas a la implementacion del controlador FOC, cualquier cosa extra egregarla en los anexos

- no es requerido, pero se puede agregar un resumen de las concluciones al final de cada capitulo

- para el estado del arte
    - primero hacer una revicion de las tecnicas existentes
        - FOC
        - DTC
        - Trapezoidal (o 6 pasos)

    - finalizar con una comparacion y justificacion de por que se deside usar FOC

        - se ecojio FOC, principalmente por que es el mas ampliamente utilizado en motores BLDC de baja media potencia, con mayor documentacion y proyectos open sourse en los que basarse para su implementacion
        
        - DTC ofrece mejor rendimeinto en tiempos de respuesta y menor complejidad de algoritmo, pero casi no tiene proyectos open sourse para motores BLDC de baja media potencia, complejizando su implementacion, ya que este tipo de control es mas utilizado en motores de media alta potencia en entornos indutriales y no es tan comun para su uso en robotica
        
        - trapezoidal queda totalmente descartado, aun que es extremadamente mas sensillo en su algoritmo que FOC e incluso que DTC, ofrece un peor control del torque y casi nulo control de posicion, este tipo de control es mayormente usado en drones y autos a radio control por su simplecidad y bajos requicitos de hardware, pero en cuanto a rendimiento, estabilidad y presicion del control es el peor
    
    - segundo una revision de algunos proyectos existetnes que se usen de referencia
        proyectos a revisar:
            - Odrive 3.6/.5
            - Vesc 75300
            - Simple FOC
        - IMPORTANTE: cualquier cosa que se tome de estos proyecto se deve mensionar y justificar

        - referencias tomadas:
            - Controladores de puerta UCC2721 -> Vesc 75300
            - Amplificadores sensor de corriente INA240A1 -> Vesc 75300
            - Distribucion de los mosfet es una variacion entre Odrive y Vesc 75300
                - los mosfet de escojieron por conveniencia de stock y precio para ensamblaje en JLCPCB, buscando un mosfet economico, pero que pueda ofrecer buen desempeño para el prototipado, ademas que utilizando el mismo empaquetado, hay mosfet de mucha mayor corriente que serian ideal para su uso en sumo, pero a mayor coste, de esta forma el diseño se puede reutilizar y mejorar para una implementacion final
            - se escojio STM32 por que se utiliza tanto en Odrive como Vesc, pero se desidio utilizar la gama H7, que es bastante superior a los F4 de Odrive y Vesc, ya que su coste y stock para ensamblaje en JLCPCB eran similares, pero los H7 tienen mayor frecuencia en el nucleo y por lo tanto mayor resolucion en el timer, ademas de un ADC de 16 bits (reales) y especificamente se utilizo el STM32H743, ya que es el microcontrolador de los H7 con mayor memorio RAM y flash

            Odrive (3.6):
                -
                - tiene un enfoque en la robotica, con un buen compromiso entre las prestaciones de potencia y una alta presicion, puede manejar motores de baja-media potencia y mantener una alta presicion, aun que puede llegar a limitar la velocidad maxima del motor, teniendo un limite aproximado de 80kerpm
                
                - principalmente se tomo como referencia para la implementacion del codigo y configuracion del STM32, ya que ambos estan disponibles de forma open sourse y el proyecto tiene un enfoque especial para su uso en robotica 

            Vesc (75300): 
                - principalemtne esta pensando ofrecer altas prestaciones de corriente y velocidad, teniendo opciones desde motores de baja media potencia hasta potores de alta potencia, pero sin tanta presicion, tiene una velocidad maxima de 150krpm

                - principalmente se tomo como referencia para la implementacion de hardware, ya que es un driver con unas prestaciones bastante sobre salientes y aun que su codigo tambien es open sourse y utiliza un control FOC, su proposito esta mas orientaod al uso en scooters, skate y sistemas de propulcion similaes que no requieren una alta presicion y no tanto para un uso en robotica

            SimpleFOC: 
                - es una libreria de control FOC que tiene un gran enfoque para su uso en robótica y la presicion, pero solo para motores de baja potencia

                - se utilizo para el esquema de control, al ser el mas simplificado y específicamente orientado para su uso en robótica
